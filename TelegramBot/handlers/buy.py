# handlers/buy.py
from bot import bot
from telebot import types

CONTRACT = "0x0023caf04B4fAc8B894Fc7fA49d38ddc4606a816"
SITE = "https://devilsuniverse.com"

def build_buy_markup() -> types.InlineKeyboardMarkup:
    kb = types.InlineKeyboardMarkup(row_width=3)
    # Row 1 ‚Äî Buy
    kb.row(
        types.InlineKeyboardButton("üé≤ OKX", url="https://web3.okx.com/ru/token/bsc/0x0023caf04b4fac8b894fc7fa49d38ddc4606a816"),
        types.InlineKeyboardButton("ü•û Pancake", url="https://pancakeswap.finance/swap?outputCurrency=0x0023caf04b4fac8b894fc7fa49d38ddc4606a816&chain=bsc"),
        types.InlineKeyboardButton("üå∂ Paprika", url="https://coinpaprika.com/coin/kafka-kafka/")
    )
    # Row 2 ‚Äî Charts & Explorer
    kb.row(
        types.InlineKeyboardButton("üìà GeckoTerminal", url="https://www.geckoterminal.com/bsc/tokens/0x0023caf04b4fac8b894fc7fa49d38ddc4606a816"),
        types.InlineKeyboardButton("üîé BscScan", url="https://bscscan.com/token/0x0023caf04B4fAc8B894Fc7fA49d38ddc4606a816"),
        types.InlineKeyboardButton("üåê Website", url=SITE)
    )
    # Row 3 ‚Äî Utilities
    kb.row(
        types.InlineKeyboardButton("üìã Copy CA", callback_data="buy_copy_ca"),
        types.InlineKeyboardButton("‚ùì How to buy", callback_data="buy_howto")
    )
    return kb

def buy_main_text() -> str:
    return (
        "ü™ô *Buy $KAFKA*\n"
        "_BEP-20 on BNB Smart Chain_\n\n"
        "‚Ä¢ *Contract:* `"+CONTRACT+"`\n"
        "‚Ä¢ Decimals: `18`\n"
        "‚Ä¢ Slippage: –æ–±—ã—á–Ω–æ `0.5‚Äì1%`\n\n"
        "üëâ –í—ã–±–∏—Ä–∞–π –ø–ª–æ—â–∞–¥–∫—É –Ω–∏–∂–µ, –∞ –µ—Å–ª–∏ –≤–ø–µ—Ä–≤—ã–µ ‚Äî –∂–º–∏ *How to buy*."
    )

@bot.message_handler(func=lambda msg: msg.text == "ü™ô Buy $KAFKA")
def handle_buy(message):
    bot.send_message(
        message.chat.id,
        buy_main_text(),
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=build_buy_markup()
    )

@bot.callback_query_handler(func=lambda c: c.data == "buy_copy_ca")
def cb_buy_copy_ca(call):
    # –û—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî —É–¥–æ–±–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
    bot.answer_callback_query(call.id, "Contract address sent.")
    bot.send_message(
        call.message.chat.id,
        "üîó *$KAFKA Contract (BSC):*\n`"+CONTRACT+"`",
        parse_mode="Markdown",
        disable_web_page_preview=True
    )

@bot.callback_query_handler(func=lambda c: c.data == "buy_howto")
def cb_buy_howto(call):
    text = (
        "‚ùì *How to buy $KAFKA*\n\n"
        "1) *–ö–æ—à–µ–ª—ë–∫*: MetaMask/OKX Wallet. –°–µ—Ç—å ‚Äî *BNB Smart Chain* (BSC).\n"
        "2) *–ü–æ–ø–æ–ª–Ω–∏—Ç—å BNB* –¥–ª—è –≥–∞–∑–∞.\n"
        "3) *–ò–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞*: –¥–æ–±–∞–≤—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç:\n"
        "`"+CONTRACT+"`\n"
        "4) *Swap –Ω–∞ Pancake/OKX*: –≤—ã–±–µ—Ä–∏ $KAFKA –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.\n"
        "5) *Slippage*: –Ω–∞—á–Ω–∏ —Å 0.5‚Äì1%. –ï—Å–ª–∏ –æ—Ä–¥–µ—Ä –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç ‚Äî —á—É—Ç—å —É–≤–µ–ª–∏—á—å.\n\n"
        "üí° *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å*: –ø—Ä–æ–≤–µ—Ä—è–π –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞, –Ω–µ –∫–ª–∏–∫–∞–π –Ω–µ–∑–Ω–∞–∫–æ–º—ã–µ —Å—Å—ã–ª–∫–∏."
    )
    kb = types.InlineKeyboardMarkup()
    kb.row(
        types.InlineKeyboardButton("ü•û Open Pancake", url="https://pancakeswap.finance/swap?outputCurrency=0x0023caf04b4fac8b894fc7fa49d38ddc4606a816&chain=bsc")
    )
    kb.row(
        types.InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="buy_back"),
        types.InlineKeyboardButton("üìã Copy CA", callback_data="buy_copy_ca")
    )
    # –∫—Ä–∞—Å–∏–≤–æ ‚Äî –º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –∑–∞—Å–æ—Ä—è—è —á–∞—Ç
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=text,
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=kb
    )
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda c: c.data == "buy_back")
def cb_buy_back(call):
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=buy_main_text(),
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=build_buy_markup()
    )
    bot.answer_callback_query(call.id)
