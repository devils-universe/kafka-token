# handlers/base_ru_patch.py
from telebot import types
from bot import bot

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboard) ‚Äî –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ç–æ–ª—å–∫–æ Inline, —ç—Ç–æ –º–æ–∂–Ω–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–∞—Ç—å
def main_menu_ru() -> types.ReplyKeyboardMarkup:
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üìã –ó–∞–¥–∞–Ω–∏—è", "üõí –ú–∞–≥–∞–∑–∏–Ω", "ü™ô –ö—É–ø–∏—Ç—å $KAFKA")
    return markup

# –ò–Ω–ª–∞–π–Ω-–º–µ–Ω—é (–¥–ª—è –∫–æ–ª–±—ç–∫–æ–≤ –±–µ–∑ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
def inline_root_ru() -> types.InlineKeyboardMarkup:
    kb = types.InlineKeyboardMarkup()
    kb.row(
        types.InlineKeyboardButton("ü™ô –ö—É–ø–∏—Ç—å $KAFKA", callback_data="open_buy"),
        types.InlineKeyboardButton("üìã –ó–∞–¥–∞–Ω–∏—è", callback_data="open_tasks"),
    )
    kb.row(
        types.InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="open_shoop"),
        types.InlineKeyboardButton("üéÅ –ê–∏—Ä–¥—Ä–æ–ø", callback_data="open_airdrop"),
        types.InlineKeyboardButton("üéÆ –ò–≥—Ä–∞", callback_data="open_game"),
    )
    kb.row(
        types.InlineKeyboardButton("üåê –í–µ–±", callback_data="open_web")
    )
    return kb

# –ó–∞–≥–ª—É—à–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ —à–ª—ë–º –Ω–æ–≤–æ–µ
STUBS_RU = {
    "open_tasks":  "–û—Ç–∫—Ä—ã–≤–∞—é: –ó–∞–¥–∞–Ω–∏—è",
    "open_shoop":  "–û—Ç–∫—Ä—ã–≤–∞—é: –ú–∞–≥–∞–∑–∏–Ω",
    "open_airdrop":"–û—Ç–∫—Ä—ã–≤–∞—é: –ê–∏—Ä–¥—Ä–æ–ø",
    "open_game":   "–û—Ç–∫—Ä—ã–≤–∞—é: –ò–≥—Ä–∞",
    "open_web":    "–û—Ç–∫—Ä—ã–≤–∞—é: –í–µ–±",
}

@bot.callback_query_handler(func=lambda c: getattr(c, "data", "") in STUBS_RU)
def cb_open_stub_ru(call):
    text = STUBS_RU[call.data]
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É + –∫–æ—Ä–Ω–µ–≤–æ–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=text,
        reply_markup=inline_root_ru()
    )
    bot.answer_callback_query(call.id)
