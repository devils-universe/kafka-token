# TelegramBot/handlers/user_handlers.py
from telebot import types
from bot import bot
from utils.language import t, set_lang, get_lang
from utils.translations import TRANSLATIONS  # —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ –æ–±–æ–∏—Ö —è–∑—ã–∫–∞—Ö

# –ö–ª—é—á–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–ª–æ–≥–∏—á–µ—Å–∫–∏–µ)
MENU_KEYS = ["menu_buy", "menu_tasks", "menu_shop", "menu_aird", "menu_game", "menu_web"]

def label(lang: str, key: str) -> str:
    """–í–µ—Ä–Ω—ë—Ç –Ω–∞–¥–ø–∏—Å—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ key –Ω–∞ —è–∑—ã–∫–µ lang."""
    return TRANSLATIONS[lang].get(key, key)

def build_main_menu(user_id: int) -> types.ReplyKeyboardMarkup:
    lang = get_lang(user_id)
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)

    kb.add(
        types.KeyboardButton(label(lang, "menu_buy")),
        types.KeyboardButton(label(lang, "menu_tasks")),
        types.KeyboardButton(label(lang, "menu_shop")),
    )
    kb.add(
        types.KeyboardButton(label(lang, "menu_aird")),
        types.KeyboardButton(label(lang, "menu_game")),
        types.KeyboardButton(label(lang, "menu_web")),
    )
    # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    kb.add(types.KeyboardButton(t(user_id, "language")))
    return kb

def build_lang_menu(user_id: int) -> types.ReplyKeyboardMarkup:
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton(t(user_id, "english")),
           types.KeyboardButton(t(user_id, "russian")))
    kb.add(types.KeyboardButton(t(user_id, "back")))
    return kb

@bot.message_handler(commands=["start"])
def on_start(message):
    uid = message.from_user.id
    start_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_kb.add(types.KeyboardButton(t(uid, "start_btn")))
    start_kb.add(types.KeyboardButton(t(uid, "language")))
    bot.send_message(message.chat.id, t(uid, "start_prompt"), reply_markup=start_kb)

@bot.message_handler(func=lambda m: m.text in {"Start", "–°—Ç–∞—Ä—Ç"})
def on_press_start(message):
    uid = message.from_user.id
    bot.send_message(message.chat.id, t(uid, "menu_title"), reply_markup=build_main_menu(uid))

@bot.message_handler(func=lambda m: m.text in {"üåê Language", "üåê –Ø–∑—ã–∫"})
def on_language(message):
    uid = message.from_user.id
    bot.send_message(message.chat.id, t(uid, "choose_language"), reply_markup=build_lang_menu(uid))

@bot.message_handler(func=lambda m: m.text in {"English", "–†—É—Å—Å–∫–∏–π"})
def on_language_choice(message):
    uid = message.from_user.id
    txt = message.text
    if txt == "English":
        set_lang(uid, "en")
        bot.send_message(message.chat.id, t(uid, "lang_set_en"), reply_markup=build_main_menu(uid))
    elif txt == "–†—É—Å—Å–∫–∏–π":
        set_lang(uid, "ru")
        bot.send_message(message.chat.id, t(uid, "lang_set_ru"), reply_markup=build_main_menu(uid))

@bot.message_handler(func=lambda m: m.text in {"‚¨ÖÔ∏è Back", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"})
def on_back(message):
    uid = message.from_user.id
    bot.send_message(message.chat.id, t(uid, "menu_title"), reply_markup=build_main_menu(uid))

# === –í–ê–ñ–ù–û: –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤, —á—Ç–æ–±—ã –Ω–µ –±–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∞–Ω–≥–ª. —Ö–µ–Ω–¥–ª–µ—Ä—ã ===
RU_MENU_LABELS = {
    "menu_buy":   label("ru", "menu_buy"),
    "menu_tasks": label("ru", "menu_tasks"),
    "menu_shop":  label("ru", "menu_shop"),
    "menu_aird":  label("ru", "menu_aird"),
    "menu_game":  label("ru", "menu_game"),
    "menu_web":   label("ru", "menu_web"),
}
RU_LABEL_SET = set(RU_MENU_LABELS.values())

@bot.message_handler(func=lambda m: m.text in RU_LABEL_SET)
def on_ru_menu_click(message):
    """–ö–æ–≥–¥–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ —Ä—É—Å—Å–∫–æ–º ‚Äî —Å—é–¥–∞ –ø—Ä–∏–ª–µ—Ç–∞—é—Ç –∫–ª–∏–∫–∏ –ø–æ —Ä—É—Å—Å–∫–∏–º –∫–Ω–æ–ø–∫–∞–º –º–µ–Ω—é.
    –ù–∞ —ç—Ç–æ–º —à–∞–≥–µ –¥–∞—ë–º –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–µ –∑–∞–≥–ª—É—à–∫–∏. –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º ‚Äî –ø–æ–¥–≤—è–∂–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –≤—ã–∑–æ–≤—ã.
    """
    uid = message.from_user.id
    txt = message.text

    # –û–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª–∏
    clicked_key = None
    for k, v in RU_MENU_LABELS.items():
        if v == txt:
            clicked_key = k
            break

    if not clicked_key:
        return

    # –ó–∞–≥–ª—É—à–∫–∏ (–ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ —Ç–µ–∫—Å—Ç—ã)
    stub_key = {
        "menu_buy":   "stub_buy",
        "menu_tasks": "stub_tasks",
        "menu_shop":  "stub_shop",
        "menu_aird":  "stub_aird",
        "menu_game":  "stub_game",
        "menu_web":   "stub_web",
    }[clicked_key]

    bot.send_message(message.chat.id, t(uid, stub_key))
